export interface Proxy {
    root: string;
    operator: string;
}
export interface OrderMessage {
}
export interface RebalanceOrderMessage extends OrderMessage {
    Rebalance: {
        stake_authority: string;
        withdraw_authority: string;
        stake_proxy?: Proxy;
        reserve_address?: string;
        meta?: string;
    };
}
export interface FragmentedRebalanceOrderMessage extends OrderMessage {
    FragmentedRebalance: {
        stake_authority: string;
        withdraw_authority: string;
        stake_fragment_size_bps: number;
        stake_proxy?: Proxy;
    };
}
export interface FragmentedRebalanceOrderMessage extends OrderMessage {
    FragmentedRebalance: {
        stake_authority: string;
        withdraw_authority: string;
        stake_fragment_size_bps: number;
        stake_proxy?: Proxy;
    };
}
export interface MergeOrderMessage extends OrderMessage {
    Merge: {
        stake_authority: string;
        withdraw_authority: string;
        stake_proxy?: Proxy;
        reserve_address?: string;
        meta?: string;
    };
}
export interface SoftMergeOrderMessage extends OrderMessage {
    SoftMerge: {
        stake_authority: string;
        withdraw_authority: string;
        max_stake_fragment_size_bps: number;
        stake_proxy?: Proxy;
    };
}
export interface SoftMergeOrderMessage extends OrderMessage {
    SoftMerge: {
        stake_authority: string;
        withdraw_authority: string;
        max_stake_fragment_size_bps: number;
        stake_proxy?: Proxy;
    };
}
export interface ClaimExtraBalanceOrderMessage extends OrderMessage {
    ClaimExtraBalance: {
        stake_authority: string;
        withdraw_authority: string;
        stake_proxy?: Proxy;
        meta?: string;
    };
}
export interface ExitMessage extends OrderMessage {
    Exit: {
        stake_authority: string;
        withdraw_authority: string;
        exit_authority: string;
        amount: 'All' | {
            Part: number;
        };
        payment: string;
        stake_proxy?: Proxy;
        meta?: string;
    };
}
export interface ResetUndelegatedMessage extends OrderMessage {
    ResetUndelegated: {
        stake_authority: string;
        withdraw_authority: string;
        temporary_validator: string;
        stake_proxy?: Proxy;
        meta?: string;
    };
}
export declare const orderMessagesToStdin: (messages: OrderMessage[]) => string;
