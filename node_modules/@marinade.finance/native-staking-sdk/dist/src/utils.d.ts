import { AccountInfo, Connection, ParsedAccountData, PublicKey, TransactionInstruction } from "@solana/web3.js";
import BN from "bn.js";
export declare const withDecimalPoint: (bn: BN, decimals: number) => string;
export declare const tokenBalanceToNumber: (bn: BN, decimals: number) => string;
export declare const lamportsToSol: (bn: BN) => string;
export declare const getStakeAccounts: (connection: Connection, withdrawAuthority: PublicKey | null, stakeAuthority: PublicKey | null) => Promise<{
    pubkey: PublicKey;
    account: AccountInfo<ParsedAccountData>;
}[]>;
export declare const filterReadyToRevoke: (epoch: number, account: AccountInfo<ParsedAccountData>) => boolean;
export type StakeDistribution = {
    validatorsDelegation: Record<string, {
        balance: BN;
        stake: BN;
    }>;
};
export declare const getFutureStakeDistribution: (connection: Connection, withdrawAuthority: PublicKey | null, stakeAuthority: PublicKey | null) => Promise<StakeDistribution>;
export declare const formatStakeDistribution: (stakeDistribution: StakeDistribution) => string;
export declare const buildAuthorizeStakerInstructions: (stakeAccounts: PublicKey[], authorizedPubkey: PublicKey, stakeAuthority: PublicKey) => TransactionInstruction[];
