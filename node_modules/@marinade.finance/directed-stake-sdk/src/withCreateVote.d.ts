import { PublicKey, TransactionInstruction } from '@solana/web3.js';
import { DirectedStakeSdk } from './sdk';
/**
 * Generating an instruction to create a new directed stake vote record account
 * which is a PDA address of root and owner.
 *
 * Instruction requires signature of owner and rentPayer.
 *
 * @type {Object} args - Arguments on instruction creation
 * @param {DirectedStakeSdk} args.sdk - Directed stake SDK instance
 * @param {PublicKey} args.root - Address of the directed stake root account that the vote record will be created under
 * @param {PublicKey} args.validatorVote - Address of the validator vote account that the vote record will be created for
 * @param {PublicKey} args.rentPayer - Payer of the rent excempt price the vote record is created with
 *                                    (when not passed as the argument the sdk wallet will be taken as the payer)
 * @type {Object} return - Return data of generated instruction
 * @return {TransactionInstruction} return.instruction - Instruction to create a new vote record
 * @return {PublicKey} return.address - Address of the new vote record to be created when the instruction is executed
 */
export declare function withCreateVote({ sdk, root, validatorVote, rentPayer, }: {
    sdk: DirectedStakeSdk;
    root?: PublicKey;
    validatorVote: PublicKey;
    rentPayer?: PublicKey;
}): Promise<{
    address: PublicKey;
    instruction: TransactionInstruction;
}>;
