"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.withUpdateVote = void 0;
const web3_js_1 = require("@solana/web3.js");
const sdk_1 = require("./sdk");
const accounts_1 = require("./accounts");
/**
 * Generating an instruction that updates an existing directed stake vote account,
 * changing the registered validator vote account public key.
 *
 * Instruction requires signature of owner.
 *
 * @type {Object} args - Arguments on instruction creation
 * @param {DirectedStakeSdk} args.sdk - Directed stake SDK instance
 * @param {PublicKey} args.voteRecord - Address of the vote record to be updated; when the vote record address is not provided
 *                                      the root and owner must be provided to generate the desired vote record address
 * @param {PublicKey} args.root - Address of the directed stake root account that could be used to generate the vote record address
 * @param {PublicKey} args.validatorVote - Address of the validator vote account that the vote record will be updated with
 * @type {Object} return - Return data of generated instruction
 * @return {TransactionInstruction} return.instruction - Instruction to update vote record
 */
async function withUpdateVote({ sdk, voteRecord, root = new web3_js_1.PublicKey(sdk_1.DEFAULT_DIRECTED_STAKE_ROOT), validatorVote, }) {
    const owner = sdk.program.provider.publicKey;
    if (!voteRecord && !root) {
        throw new Error('voteRecord or root with owner must be provided to do updateVote');
    }
    else if (!voteRecord && root) {
        voteRecord = (0, accounts_1.voteRecordAddress)({
            directedStakeProgramId: sdk.program.programId,
            root,
            owner,
        }).address;
    }
    const instruction = await sdk.program.methods
        .updateVote()
        .accountsStrict({
        voteRecord: voteRecord,
        owner,
        validatorVote,
    })
        .instruction();
    return { instruction };
}
exports.withUpdateVote = withUpdateVote;
//# sourceMappingURL=withUpdateVote.js.map