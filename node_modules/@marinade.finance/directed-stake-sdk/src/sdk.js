"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.DirectedStakeSdk = exports.UPDATE_VOTE_RECORD_EVENT = exports.REMOVE_VOTE_RECORD_EVENT = exports.CREATE_VOTE_RECORD_EVENT = exports.CREATE_ROOT_EVENT = exports.DIRECTED_STAKE_SEED = exports.DEFAULT_DIRECTED_STAKE_ROOT = exports.DEFAULT_DIRECTED_STAKE_PROGRAM_ID = void 0;
const generated = __importStar(require("../generated/directed_stake"));
const anchor_1 = require("@coral-xyz/anchor");
const web3_js_1 = require("@solana/web3.js");
const nodewallet_1 = __importDefault(require("@coral-xyz/anchor/dist/cjs/nodewallet"));
/**
 * Directed stake contract SDK.
 *
 * Start by creating a new instance of the DirectedStakeSdk class.
 * It's required parameter for all operations.
 *
 * To get account addresses see ./accounts.ts
 * To read account data see ./api.ts
 * To execute contract operations see ./with*.ts
 */
const DirectedStakeIDL = generated.IDL;
exports.DEFAULT_DIRECTED_STAKE_PROGRAM_ID = 'dstK1PDHNoKN9MdmftRzsEbXP5T1FTBiQBm1Ee3meVd';
exports.DEFAULT_DIRECTED_STAKE_ROOT = 'DrooToPS3MLqgZwBiK2fkAPUTUgKNV3CGb2NqFRAL4Zf';
exports.DIRECTED_STAKE_SEED = 'stake-direction';
exports.CREATE_ROOT_EVENT = 'CreateRootEvent';
exports.CREATE_VOTE_RECORD_EVENT = 'CreateVoteRecordEvent';
exports.REMOVE_VOTE_RECORD_EVENT = 'RemoveVoteRecordEvent';
exports.UPDATE_VOTE_RECORD_EVENT = 'UpdateVoteRecordEvent';
class DirectedStakeSdk {
    constructor({ programId = new web3_js_1.PublicKey(exports.DEFAULT_DIRECTED_STAKE_PROGRAM_ID), connection, wallet, opts = {}, }) {
        this.program = this.getProgram({ programId, connection, wallet, opts });
    }
    getProgram({ connection, wallet, opts, programId, }) {
        if (wallet instanceof web3_js_1.Keypair) {
            wallet = new nodewallet_1.default(wallet);
        }
        const provider = new anchor_1.AnchorProvider(connection, wallet, opts);
        return new anchor_1.Program(DirectedStakeIDL, programId, provider);
    }
}
exports.DirectedStakeSdk = DirectedStakeSdk;
//# sourceMappingURL=sdk.js.map